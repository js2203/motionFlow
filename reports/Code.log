Traceback (most recent call last):
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\janni\appdata\local\programs\python\python37\lib\asyncio\base_events.py", line 568, in run_until_complete
    return future.result()
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\janni\appdata\local\programs\python\python37\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import caffe
import sys, os
import numpy as np
import scipy.io
from PIL import Image
from sklearn.preprocessing import LabelEncoder
import timeit

model = 'model/fcn_blur2mflow.caffemodel'
img_mean = (111.64, 113.53, 93.96)
net = caffe.Net('model/fcn_blur2mflow.prototxt', model, caffe.TEST)

le_u = LabelEncoder()
le_v = LabelEncoder()
le_u.classes_ = np.loadtxt('model/labels_u.txt')
le_v.classes_ = np.loadtxt('model/labels_v.txt')

# load image, switch to BGR, subtract mean, and make dims C x H x W for Caffe
im = Image.open(sys.argv[1])
in_ = np.array(im, dtype=np.float32)
in_ = in_[:,:,::-1]
in_ -= img_mean
in_ = in_.transpose((2,0,1))

# shape for input (data blob is N x C x H x W), set data
net.blobs['data'].reshape(1, *in_.shape)
net.blobs['data'].data[...] = in_
# run net and take argmax for prediction
net.forward()
mf1 = net.blobs['score1'].data[0].argmax(0)
mf2 = net.blobs['score2'].data[0].argmax(0)

mf1 = le_u.inverse_transform(mf1.flatten()).reshape(mf1.shape)
mf2 = le_v.inverse_transform(mf2.flatten()).reshape(mf2.shape)

mfmap = np.stack((mf1, mf2)).transpose((1, 2, 0))


scipy.io.savemat(sys.argv[2], {'mfmap': mfmap})
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[1;32m<ipython-input-1-c2ad106f3aa5>[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [1;32mimport[0m [0mcaffe[0m[1;33m[0m[0m
[0m[0;32m      2[0m [1;32mimport[0m [0msys[0m[1;33m,[0m [0mos[0m[1;33m[0m[0m
[0;32m      3[0m [1;32mimport[0m [0mnumpy[0m [1;32mas[0m [0mnp[0m[1;33m[0m[0m
[0;32m      4[0m [1;32mimport[0m [0mscipy[0m[1;33m.[0m[0mio[0m[1;33m[0m[0m
[0;32m      5[0m [1;32mfrom[0m [0mPIL[0m [1;32mimport[0m [0mImage[0m[1;33m[0m[0m

[1;31mModuleNotFoundError[0m: No module named 'caffe'
ModuleNotFoundError: No module named 'caffe'

